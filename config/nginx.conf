user nginx nginx;
worker_processes 2;
error_log /var/log/nginx/error.log;
worker_rlimit_nofile 8192;

events {
    worker_connections 4096;
}

http {
    # your code goes here ...
    default_type  application/octet-stream;
    include	  /etc/nginx/mime.types;
    #include /etc/nginx/conf.d/*.conf;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    server_tokens off; #nginx version off
    #more_clear_headers 'X-Powered-By'; #make this header blank
    #more_clear_headers 'Server'; #make this header blank

    ##
    # SSL Settings
    ##

    ssl_protocols  TLSv1.2; # Dropping SSLv3(POODLE), TLSv1, TLSv1.1
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    #add_header Strict-Transport-Security max-age=15768000;

    ##
    # Logging Settings
    ##

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

    # gzip_vary on;
    # gzip_proxied any;
     gzip_comp_level 2;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    upstream application_vs {
        least_conn;
        server srv1.example.com max_fails=1 fail_timeout=10;
        #server srv2.example.com max_fails=1 fail_timeout=10;
    }

    server {
        listen 80;

        location / {
            proxy_pass http://application_vs;
        }
    }

    server {
      listen 443 ssl http2;
      listen [::]:443 ssl http2;

      # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
      ssl_certificate /etc/nginx/ssl/self-signed.crt;
      ssl_certificate_key /etc/nginx/ssl/self-signed.key;
      ssl_session_timeout 1d;
      ssl_session_cache shared:SSL:50m;
      ssl_session_tickets off;

      server_name srv1.example.com;
      root /opt/application/application;
#      location / {
#          # [...]
#      }
#      location /foo {
#          # [...]
#      }
#      location /bar {
#          root /some/other/place;
#          # [...]
#    }

#    server {
#      listen 80 default_server;
#      listen [::]:80 default_server;

      # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
#      return 301 https://$host$request_uri;
#  }

  }
}
